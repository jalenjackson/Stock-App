{"version":3,"sources":["components/Search/redux/types.js","components/Search/redux/search.js","components/Chart/redux/types.js","components/Chart/redux/chart.js","store/RootReducer.js","i18n/translations/index.js","i18n/i18n.js","components/Chart/redux/actions.js","components/Chart/methods.js","components/Chart/LatestPrice.js","components/Chart/index.js","pages/Home/index.js","utils/formatMessage.js","components/Search/redux/actions.js","components/Search/index.js","pages/StockShow/index.js","utils/UriHelper.js","components/Search/redux/sagas/search.js","components/Chart/redux/sagas/getChartData.js","components/Chart/redux/sagas/getLatestPrice.js","store/RootSaga.js","App.js","serviceWorker.js","index.js"],"names":["initialState","Map","searchTerm","searchResults","List","selectedTicker","SearchReducer","state","action","type","types","data","key","value","merge","fromJS","tickerData","dates","chartData","latestPrice","loadingChartData","loadingLatestPrice","latestPriceExceeded","chartDataExceeded","interval","ChartReducer","combineReducers","search","chart","I18nProvider","children","locale","messages","translations","updateChartState","getOption","props","backgroundColor","legend","inactiveColor","textStyle","color","tooltip","trigger","axisPointer","animation","lineStyle","width","opacity","xAxis","axisLine","yAxis","scale","splitLine","show","grid","bottom","dataZoom","handleIcon","handleSize","dataBackground","areaStyle","handleStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","series","name","itemStyle","color0","borderColor","borderColor0","changeInterval","getChartData","ticker","LatestPrice","className","onClick","setTimeout","getLatestPrice","tryFetchingLatestPriceAgain","Object","keys","length","price","change","String","Math","round","substring","echarts","registerTheme","connect","get","toJS","showNotification","useEffect","setInterval","clearInterval","toUpperCase","style","height","option","notMerge","lazyUpdate","theme","minHeight","loadingOption","text","textColor","maskColor","zlevel","showLoading","tryFetchingChartAgain","Home","formatMessage","IntlProvider","defaultLocale","onError","err","console","error","intl","updateSearchState","Option","Autocomplete","withRouter","searchStock","term","options","map","result","dropdownClassName","dropdownMatchSelectWidth","onSearch","onSelect","selection","history","push","size","dataSource","placeholder","id","optionLabelProp","suffix","log","_","UriHelper","method","callSearchStockTickerAPI","setSearchStockTicker","watchSearchStockTicker","url","axios","request","response","put","call","matches","debounce","callGetChartDataAPI","setGetChartData","watchGetChartData","apiOptions","outputSizeFull","target","chartDataKey","allChartData","chartObj","reverse","slice","takeLatest","callGetLatestPriceAPI","setGetLatestPrice","watchGetLatestPrice","quote","RootSaga","all","spawn","SearchSaga","GetChartData","GetLatestPrice","sagaMiddleware","createSagaMiddleware","store","createStore","RootReducer","applyMiddleware","run","App","exact","path","component","StockShow","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"sYAAe,EACqB,+BADrB,EAEiB,2BCC1BA,EAAeC,YAAI,CACrBC,WAAY,GACZC,cAAeC,cACfC,eAAgB,KAkBLC,EAfO,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACpD,OAAQA,EAAOC,MACX,KAAKC,EAAqC,IAAD,EACdF,EAAOG,KAAtBC,EAD6B,EAC7BA,IAAKC,EADwB,EACxBA,MAEb,OAAON,EAAMO,MAAN,eACFF,EAAMG,YAAOF,KAGtB,QACI,OAAON,ICnBJ,EACW,qBADX,EAEa,uBAFb,EAGe,yBCAxBP,EAAee,YAAO,CACxBC,WAAYf,YAAI,CACZgB,MAAOb,cACPc,UAAWd,gBAEfa,MAAOb,cACPe,YAAalB,cACbmB,kBAAkB,EAClBC,oBAAoB,EACpBC,qBAAqB,EACrBC,mBAAmB,EACnBC,SAAU,SAkBCC,EAfM,WAAmC,IAAlClB,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACnD,OAAQA,EAAOC,MACX,KAAKC,EAA2B,IAAD,EACJF,EAAOG,KAAtBC,EADmB,EACnBA,IAAKC,EADc,EACdA,MAEb,OAAON,EAAMO,MAAN,eACHF,EAAMG,YAAOF,KAGrB,QACI,OAAON,ICvBJmB,cAAgB,CAC3BC,SACAC,UCJW,GACX,Q,iBCOWC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACjB,kBAAC,IAAD,CAAcC,OAAO,QAAQC,SAAUC,EAAa,UAC/CH,I,2DCJII,EAAmB,SAACtB,EAAKC,GAAN,MAAiB,CAC7CJ,KAAMC,EACNC,KAAM,CAAEC,MAAKC,WCJV,SAASsB,EAAUC,GACtB,MAAO,CACHC,gBAAiB,UACjBC,OAAQ,CACJC,cAAe,OACfC,UAAW,CACPC,MAAO,SAGfC,QAAS,CACLC,QAAS,OACTC,YAAa,CACTC,WAAW,EACXpC,KAAM,QACNqC,UAAW,CACPL,MAAO,UACPM,MAAO,EACPC,QAAS,KAIrBC,MAAO,CACHxC,KAAM,WACNE,KAAMyB,EAAMnB,MACZiC,SAAU,CAACJ,UAAW,CAACL,MAAO,aAElCU,MAAO,CACHC,OAAO,EACPF,SAAU,CAACJ,UAAW,CAACL,MAAO,YAC9BY,UAAW,CAACC,MAAM,IAEtBC,KAAM,CACFC,OAAQ,IAEZC,SAAU,CAAC,CACPjB,UAAW,CACPC,MAAO,WAEXiB,WAAY,qMACZC,WAAY,MACZC,eAAgB,CACZC,UAAW,CACPpB,MAAO,WAEXK,UAAW,CACPE,QAAS,GACTP,MAAO,YAGfqB,YAAa,CACTrB,MAAO,OACPsB,WAAY,EACZC,YAAa,qBACbC,cAAe,EACfC,cAAe,IAEpB,CACCzD,KAAM,WAEVoC,WAAW,EACXsB,OAAQ,CACJ,CACI1D,KAAM,cACN2D,KAAM,eACNzD,KAAMyB,EAAMpB,WAAWE,UACvBmD,UAAW,CACP5B,MAAO,UACP6B,OAAQ,UACRC,YAAa,UACbC,aAAc,cAoC3B,SAASC,EAAerC,EAAOZ,GAClCY,EAAMsC,aAAatC,EAAMuC,OAAQnD,GACjCY,EAAMF,iBAAiB,WAAYV,G,sBCnExBoD,MApCf,SAAqBxC,GACjB,OAAIA,EAAMf,mBAEF,yBAAKwD,UAAU,wBACX,iCACA,kCAKRzC,EAAMd,oBAEF,yBAAKuD,UAAU,wBACX,gFACA,kBAAC,IAAD,CAAQpE,KAAK,UAAUqE,QAAS,kBDmEzC,SAAqC1C,GACxCA,EAAMF,iBAAiB,sBAAsB,GAC7CE,EAAMF,iBAAiB,uBAAuB,GAC9CE,EAAMF,iBAAiB,cAAe,IAEtC6C,YAAW,WACP3C,EAAM4C,eAAe5C,EAAMuC,UAC5B,MC1E+CM,CAA4B7C,KAAlE,cAKRA,EAAMjB,aAAe+D,OAAOC,KAAK/C,EAAMjB,aAAaiE,OAAS,EAEzD,yBAAKP,UAAU,wBACX,gCAAMzC,EAAMjB,YAAYkE,OACxB,wBAAIR,UAAWzC,EAAMjB,YAAYmE,OAAS,EAAI,kCAAoC,iCAAlF,UAAuHlD,EAAMjB,YAAYmE,OAAS,EAAI,IAAM,IAA5J,YAAmKC,OAAOC,KAAKC,MAAiC,IAA3BrD,EAAMjB,YAAYmE,QAAgB,KAAKI,UAAU,MAK1O,yBAAKb,UAAW,wBACZ,iCACA,mCCvBhBc,IAAQC,cAAc,WAAY,CAC9BvD,gBAAiB,YAmDrB,IAYewD,eAZS,SAAAtF,GACpB,MAAO,CACHS,WAAYT,EAAMqB,MAAMkE,IAAI,cAAcC,OAC1C5E,YAAaZ,EAAMqB,MAAMkE,IAAI,eAAeC,OAC5C3E,iBAAkBb,EAAMqB,MAAMkE,IAAI,oBAClCxE,oBAAqBf,EAAMqB,MAAMkE,IAAI,uBACrCvE,kBAAmBhB,EAAMqB,MAAMkE,IAAI,qBACnC7E,MAAOV,EAAMqB,MAAMkE,IAAI,SAASC,OAChCvE,SAAUjB,EAAMqB,MAAMkE,IAAI,eAIM,CAAEpB,aHpEd,SAACC,EAAQnD,EAAUwE,EAAkBhF,GAArC,MAAqD,CAC7EP,KAAMC,EACNC,KAAM,CAAEgE,SAAQnD,WAAUwE,mBAAkBhF,gBGkEQgE,eH/D1B,SAAAL,GAAM,MAAK,CACrClE,KAAMC,EACNiE,WG6DoEzC,oBAAzD2D,EA5Df,SAAezD,GAcX,OAbA6D,qBAAU,WACN7D,EAAMsC,aAAatC,EAAMuC,OAAQ,QAAQ,EAAMvC,EAAMpB,YACrDoB,EAAM4C,eAAe5C,EAAMuC,QAE3B,IAAMnD,EAAW0E,aAAY,WACzB9D,EAAM4C,eAAe5C,EAAMuC,UAC5B,KAEH,OAAO,WACHwB,cAAc3E,MAEnB,CAACY,EAAMuC,SAGN,6BACI,wBAAIE,UAAU,UAAWzC,EAAMuC,OAAOyB,eACtC,kBAAC,EAAgBhE,GACjB,yBAAKiE,MAAO,CAAEC,OAAQ,QAAUzB,UAAU,iBACtC,kBAAC,IAAD,CACIc,QAASA,IACTY,OAAQpE,EAAUC,GAClBoE,UAAU,EACVC,YAAY,EACZC,MAAM,WACNL,MAAO,CAAEM,UAAW,QACpBC,cFuDT,CACHC,KAAM,GACNpE,MAAO,UACPqE,UAAW,QACXC,UAAW,iBACXC,OAAQ,GE3DIC,YAAa7E,EAAMhB,mBACjBgB,EAAMb,kBACA,yBAAKsD,UAAU,mBACX,yBAAKA,UAAU,iBACX,qFACA,kBAAC,IAAD,CAAQA,UAAU,yBAAyBpE,KAAK,UAAUqE,QAAS,kBF6BhG,SAA+B1C,GAClCA,EAAMF,iBAAiB,qBAAqB,GAC5CE,EAAMF,iBAAiB,oBAAoB,GAE3C6C,YAAW,WACP3C,EAAMsC,aAAatC,EAAMuC,OAAQ,QAAQ,KAC1C,MEnCsGuC,CAAsB9E,KAA/F,eAGV,MAGd,yBAAKyC,UAAU,oBACX,uBAAGA,UAA8B,SAAnBzC,EAAMZ,SAAsB,kBAAoB,GAAKsD,QAAS,kBAAML,EAAerC,EAAO,UAAxG,QACA,uBAAGyC,UAA8B,OAAnBzC,EAAMZ,SAAoB,kBAAoB,GAAIsD,QAAS,kBAAML,EAAerC,EAAO,QAArG,MACA,uBAAGyC,UAA8B,OAAnBzC,EAAMZ,SAAoB,kBAAoB,GAAIsD,QAAS,kBAAML,EAAerC,EAAO,QAArG,MACA,uBAAGyC,UAA8B,OAAnBzC,EAAMZ,SAAoB,kBAAoB,GAAIsD,QAAS,kBAAML,EAAerC,EAAO,QAArG,WC9CD+E,MARf,WACI,OACI,6BACI,kBAAC,EAAD,CAAOxC,OAAO,W,qDCDbyC,EADQ,IAAIC,IAAa,CAAEtF,OADzB,QACiCC,SAAUC,EAD3C,SACiEqF,cAAe,QAASC,QAAS,SAACC,GAAD,OAAUC,QAAQC,MAAMF,MAC/FjH,MAAMoH,KAAKP,cCHxCQ,EAAoB,SAAChH,EAAKC,GAAN,MAAiB,CAC9CJ,KAAMC,EACNC,KAAM,CAAEC,MAAKC,W,QCKTgH,EAAWC,IAAXD,OAuCR,IAOeE,cAAWlC,aAPF,SAAAtF,GACpB,MAAO,CACHL,WAAYK,EAAMoB,OAAOmE,IAAI,cAC7B3F,cAAeI,EAAMoB,OAAOmE,IAAI,iBAAiBC,UAIN,CAAE6B,oBAAmBI,YDhD7C,SAAAC,GAAI,MAAK,CAChCxH,KAAMC,EACNuH,UC8CsBpC,EA5C1B,SAAgBzD,GACZ,IAAM8F,EAAU9F,EAAMjC,cACjBgI,KAAI,SAAAC,GAAM,OACP,kBAACP,EAAD,CAAQjH,IAAKwH,EAAO,aAAcvH,MAAOuH,EAAO,cAC5C,8BAAOA,EAAO,cACd,0BAAMvD,UAAU,qBAAqBuD,EAAO,gBAaxD,OACI,yBAAKvD,UAAU,0BACX,kBAAC,IAAD,CACIA,UAAU,eACVwD,kBAAkB,wBAClBC,0BAA0B,EAC1BC,SAdZ,SAAsBN,GAClB7F,EAAM4F,YAAYC,IAcVO,SAXZ,SAAsBC,GAClBrG,EAAMsG,QAAQC,KAAd,kBAA8BF,KAWtBG,KAAK,QACLvC,MAAO,CAAEtD,MAAO,QAChB8F,WAAYX,EACZY,YAAa1B,EAAc,CAAE2B,GAAI,2BACjCC,gBAAgB,SACZ,kBAAC,IAAD,CAAOF,YAAY,mCAAmCG,OAAQ,kBAAC,IAAD,CAAM5C,MAAO,CAAE5D,MAAO,WAAahC,KAAK,SAASoE,UAAU,8B,iBC3B9HkD,mBAVf,SAAmB3F,GAGf,OAFAqF,QAAQyB,IAAIC,IAAErD,IAAI1D,EAAO,uBAGrB,6BACI,kBAAC,EAAD,CAAOuC,OAAQwE,IAAErD,IAAI1D,EAAO,4B,kCCV3BgH,GAAY,SAACC,GACvB,MAAM,8CAAN,OAAqDA,EAArD,6B,gCCMOC,I,YAcAC,I,YAUAC,IAxBV,SAAUF,GAAyBrB,GAAnC,yEAOyB,OANfC,EAAU,CACZuB,IAAI,GAAD,OAAKL,GAAU,iBAAf,qBAA4CnB,GAC/CoB,OAAQ,OAHhB,kBAO+BK,KAAMC,QAAQzB,GAP7C,cAOc0B,EAPd,yBAQeT,IAAErD,IAAI8D,EAAU,qBAR/B,0DAUe,GAVf,sDAcA,SAAUL,GAAV,4EACI,OAD6BtB,EAAjC,EAAiCA,KAAjC,SACU4B,YAAIjC,EAAkB,aAAcK,IAD9C,OAEoB,OAFpB,SAE0B6B,YAAKR,GAA0BrB,GAFzD,UAEU8B,EAFV,6DAKQA,EAAQ3E,OAAS,GALzB,iBAMQ,OANR,UAMcyE,YAAIjC,EAAkB,gBAAiBmC,IANrD,yCAUA,SAAUP,KAAV,iEACI,OADJ,SACUQ,YAAS,IAAKtJ,EAAgC6I,IADxD,wCAIeC,U,YC5BLS,I,YA2BAC,I,YAiEAC,IA5FV,SAAUF,GAAoBtF,EAAQnD,EAAU4I,GAAhD,yEAeyB,OAdflC,EAAU,CACZuB,IAAI,GAAD,OAAKL,GAAUgB,EAAWf,QAA1B,mBAA4C1E,GAC/C0E,OAAQ,OAGRe,EAAW5I,WACX0G,EAAQuB,KAAR,oBAA4BW,EAAW5I,WAGvC4I,EAAWC,iBACXnC,EAAQuB,KAAR,oBAXR,kBAe+BC,KAAMC,QAAQzB,GAf7C,UAec0B,EAfd,QAiBYT,IAAErD,IAAI8D,EAAU,aAjB5B,0CAkBmB,YAlBnB,iCAoBmBT,IAAErD,IAAI8D,EAAN,eAAwBQ,EAAWE,UApBtD,mFAuBe,IAvBf,uDA2BA,SAAUJ,GAAV,wFACI,OADwBvJ,EAA5B,EAA4BA,KAA5B,SACUkJ,YAAI3H,EAAiB,oBAAoB,IADnD,OAEI,OAFJ,SAEU2H,YAAI3H,EAAiB,qBAAqB,IAFpD,OAIYyC,EAAqBhE,EAArBgE,OAAQnD,EAAab,EAAba,SAEZ4I,EAAa,CAAEf,OAAQ,uBAAwB7H,SAAU,OAAQ6I,gBAAgB,EAAOzB,MAAM,EAAO0B,OAAQ,sBANrH,KAQY9I,EARZ,OASa,SATb,QAUa,OAVb,QAca,OAdb,QAkBa,OAlBb,oEAWY4I,EAAa,CAAEf,OAAQ,uBAAwB7H,SAAU,QAAS6I,gBAAgB,EAAMzB,KAAM,GAAI0B,OAAQ,uBAXtH,oCAeYF,EAAa,CAAEf,OAAQ,oBAAqB7H,UAAU,EAAO6I,gBAAgB,EAAMzB,KAAM,GAAI0B,OAAQ,uBAfjH,oCAmBYF,EAAa,CAAEf,OAAQ,oBAAqB7H,UAAU,EAAO6I,gBAAgB,EAAMzB,KAAM,IAAK0B,OAAQ,uBAnBlH,iEAyBsB,OAzBtB,UAyB4BR,YAAKG,GAAqBtF,EAAQnD,EAAU4I,GAzBxE,WA2BsB,cAFZlJ,EAzBV,yBA4BQ,OA5BR,UA4Bc2I,YAAI3H,EAAiB,qBAAqB,IA5BxD,0CA+BQ,OA/BR,UA+Bc2H,YAAI3H,EAAiB,qBAAqB,IA/BxD,QAuCI,IAASqI,KALLC,EAAe,CACftJ,UAAW,GACXD,MAAO,IAGcC,EACjBuJ,EAAWvJ,EAAUqJ,GAEzBC,EAAavJ,MAAM0H,KAAK4B,GAExBC,EAAatJ,UAAUyH,KACnB,CAAC8B,EAAS,WACVA,EAAS,YACTA,EAAS,UACTA,EAAS,aAYjB,OARAD,EAAavJ,MAAQuJ,EAAavJ,MAAMyJ,UACxCF,EAAatJ,UAAYsJ,EAAatJ,UAAUwJ,UAE5CN,EAAWxB,OACX4B,EAAatJ,UAAYsJ,EAAatJ,UAAUyJ,MAAMH,EAAatJ,UAAUkE,OAASgF,EAAWxB,MACjG4B,EAAavJ,MAAQuJ,EAAavJ,MAAM0J,MAAMH,EAAavJ,MAAMmE,OAASgF,EAAWxB,OAzD7F,UA4DUiB,YAAI3H,EAAiB,oBAAoB,IA5DnD,QA6DI,OA7DJ,UA6DU2H,YAAI3H,EAAiB,QAASsI,EAAavJ,QA7DrD,QA8DW,OA9DX,UA8DiB4I,YAAI3H,EAAiB,aAAcsI,IA9DpD,kFAiEA,SAAUL,KAAV,iEACI,OADJ,SACUS,YAAWlK,EAA4BwJ,IADjD,wCAIeC,U,YChGLU,I,YAyBAC,I,YAkBAC,IA3CV,SAAUF,GAAsBlG,GAAhC,2EAOyB,OAPzB,SAEcuD,EAAU,CACZuB,IAAI,GAAD,OAAKL,GAAU,gBAAf,mBAAyCzE,GAC5C0E,OAAQ,OAJpB,SAO+BK,KAAMC,QAAQzB,GAP7C,UAOc0B,EAPd,QASYT,IAAErD,IAAI8D,EAAU,aAT5B,yCAUmB,YAVnB,YAYkBoB,EAAQ7B,IAAErD,IAAI8D,EAAU,sBAZ1C,0CAcuB,CACHvE,MAAO2F,EAAM,aACb1F,OAAQ0F,EAAM,aAAeA,EAAM,wBAhBvD,mFAqBe,IArBf,uDAyBA,SAAUF,GAAV,4EACI,OAD0BnG,EAA9B,EAA8BA,OAA9B,SACUkF,YAAI3H,EAAiB,sBAAsB,IADrD,OAEI,OAFJ,SAEU2H,YAAI3H,EAAiB,uBAAuB,IAFtD,OAIwB,OAJxB,SAI8B4H,YAAKe,GAAuBlG,GAJ1D,OAKI,OADMxD,EAJV,iBAKU0I,YAAI3H,EAAiB,sBAAsB,IALrD,WAOwB,aAAhBf,EAPR,iBAQe,OARf,UAQqB0I,YAAI3H,EAAiB,uBAAuB,IARjE,iDAUQ,OAVR,UAUc2H,YAAI3H,EAAiB,uBAAuB,IAV1D,YAaQf,EAbR,iBAce,OAdf,UAcqB0I,YAAI3H,EAAiB,cAAef,IAdzD,kFAkBA,SAAU4J,KAAV,iEACI,OADJ,SACUH,YAAWlK,EAA8BoK,IADnD,wCAIeC,U,YCjDLE,IAAV,SAAUA,KAAV,iEACI,OADJ,SACUC,YAAI,CACNC,YAAMC,IACND,YAAME,IACNF,YAAMG,MAJd,wCAQeL,U,UCDTM,GAAiBC,cACjBC,GAAQC,YAAYC,EAAaC,YAAgBL,KAEvDA,GAAeM,IAAIZ,IAoBJa,OAlBf,WACE,OACE,kBAAC,IAAD,CAAUL,MAAOA,IACb,kBAAC,EAAD,KACI,kBAAC,KAAD,KACI,kBAAC,IAAD,KACI,yBAAK5G,UAAU,gBACX,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOkH,OAAK,EAACC,KAAK,IAAIC,UAAW9E,IACjC,kBAAC,IAAD,CAAO4E,OAAK,EAACC,KAAK,iBAAiBC,UAAWC,U,qBCdlDC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAxF,GACLD,QAAQC,MAAMA,EAAMyF,c","file":"static/js/main.9922ca8e.chunk.js","sourcesContent":["export default {\n    'UPDATE_SEARCH_INTERNAL_STATE': 'UPDATE_SEARCH_INTERNAL_STATE',\n    'WATCH_SEARCH_TICKER_DATA': 'WATCH_SEARCH_TICKER_DATA'\n}","import { Map, fromJS, List } from 'immutable';\nimport types from './types';\n\nconst initialState = Map({\n    searchTerm: '',\n    searchResults: List(),\n    selectedTicker: ''\n});\n\nconst SearchReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.UPDATE_SEARCH_INTERNAL_STATE: {\n            const { key, value } = action.data;\n\n            return state.merge({\n                [key]: fromJS(value)\n            });\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default SearchReducer;","export default {\n    'UPDATE_CHART_STATE': 'UPDATE_CHART_STATE',\n    'WATCH_GET_CHART_DATA': 'WATCH_GET_CHART_DATA',\n    'WATCH_GET_LATEST_PRICE': 'WATCH_GET_LATEST_PRICE'\n}","import { Map, fromJS, List } from  'immutable';\nimport types from './types';\n\nconst initialState = fromJS({\n    tickerData: Map({\n        dates: List(),\n        chartData: List()\n    }),\n    dates: List(),\n    latestPrice: Map(),\n    loadingChartData: false,\n    loadingLatestPrice: false,\n    latestPriceExceeded: false,\n    chartDataExceeded: false,\n    interval: '5min'\n});\n\nconst ChartReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.UPDATE_CHART_STATE: {\n            const { key, value } = action.data;\n\n            return state.merge({\n               [key]: fromJS(value)\n            });\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default ChartReducer;\n\n","import { combineReducers } from 'redux';\nimport search from '../components/Search/redux/search';\nimport chart from '../components/Chart/redux/chart';\n\nexport default combineReducers({\n    search,\n    chart\n});","import enUS from './en-us';\n\nexport default {\n    'en-us': enUS,\n};","import React from 'react';\nimport translations from './translations';\nimport { IntlProvider } from 'react-intl';\n\nconst I18nProvider = ({ children }) => (\n    <IntlProvider locale='en-us' messages={translations['en-us']}>\n        {children}\n    </IntlProvider>\n);\n\nexport default I18nProvider;","import types from './types';\n\nexport const updateChartState = (key, value) => ({\n    type: types.UPDATE_CHART_STATE,\n    data: { key, value }\n});\n\nexport const getChartData = (ticker, interval, showNotification, tickerData) => ({\n    type: types.WATCH_GET_CHART_DATA,\n    data: { ticker, interval, showNotification, tickerData }\n});\n\nexport const getLatestPrice = ticker => ({\n    type: types.WATCH_GET_LATEST_PRICE,\n    ticker\n});\n\n","export function getOption(props) {\n    return {\n        backgroundColor: '#1D1D1E',\n        legend: {\n            inactiveColor: '#777',\n            textStyle: {\n                color: '#fff'\n            }\n        },\n        tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n                animation: false,\n                type: 'cross',\n                lineStyle: {\n                    color: '#35C59B',\n                    width: 2,\n                    opacity: 1\n                }\n            }\n        },\n        xAxis: {\n            type: 'category',\n            data: props.dates,\n            axisLine: {lineStyle: {color: '#8392A5'}}\n        },\n        yAxis: {\n            scale: true,\n            axisLine: {lineStyle: {color: '#8392A5'}},\n            splitLine: {show: false}\n        },\n        grid: {\n            bottom: 80,\n        },\n        dataZoom: [{\n            textStyle: {\n                color: '#8392A5'\n            },\n            handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n            handleSize: '80%',\n            dataBackground: {\n                areaStyle: {\n                    color: '#8392A5'\n                },\n                lineStyle: {\n                    opacity: 0.8,\n                    color: '#8392A5'\n                }\n            },\n            handleStyle: {\n                color: '#fff',\n                shadowBlur: 3,\n                shadowColor: 'rgba(0, 0, 0, 0.6)',\n                shadowOffsetX: 2,\n                shadowOffsetY: 2\n            }\n        }, {\n            type: 'inside'\n        }],\n        animation: false,\n        series: [\n            {\n                type: 'candlestick',\n                name: 'Price Action',\n                data: props.tickerData.chartData,\n                itemStyle: {\n                    color: '#FD1050',\n                    color0: '#35C59B',\n                    borderColor: '#FD1050',\n                    borderColor0: '#35C59B'\n                }\n            }\n        ]\n    };\n}\n\nexport function tryFetchingChartAgain(props) {\n    props.updateChartState('chartDataExceeded', false);\n    props.updateChartState('loadingChartData', true);\n\n    setTimeout(() => {\n        props.getChartData(props.ticker, '5min', false);\n    }, 1200);\n}\n\nexport function tryFetchingLatestPriceAgain(props) {\n    props.updateChartState('loadingLatestPrice', true);\n    props.updateChartState('latestPriceExceeded', false);\n    props.updateChartState('latestPrice', {});\n\n    setTimeout(() => {\n        props.getLatestPrice(props.ticker);\n    }, 1200);\n}\n\nexport const getLoadingOption = () => {\n    return {\n        text: '',\n        color: '#35C59B',\n        textColor: 'white',\n        maskColor: 'rgba(0,0,0, 0)',\n        zlevel: 0\n    };\n};\n\nexport function changeInterval(props, interval) {\n    props.getChartData(props.ticker, interval);\n    props.updateChartState('interval', interval);\n}","import React from 'react';\nimport Button from \"antd/lib/button\";\nimport { tryFetchingLatestPriceAgain } from './methods';\n\nfunction LatestPrice(props) {\n    if (props.loadingLatestPrice) {\n        return (\n            <div className='latest-price-wrapper'>\n                <h1>-</h1>\n                <h2>-</h2>\n            </div>\n        )\n    }\n\n    if (props.latestPriceExceeded) {\n        return (\n            <div className='latest-price-wrapper'>\n                <h1>Failed to get price. (only 5 api calls a minute)</h1>\n                <Button type='primary' onClick={() => tryFetchingLatestPriceAgain(props)}>Try again</Button>\n            </div>\n        )\n    }\n\n    if (props.latestPrice && Object.keys(props.latestPrice).length > 0) {\n        return (\n            <div className='latest-price-wrapper'>\n                <h1>${props.latestPrice.price}</h1>\n                <h2 className={props.latestPrice.change > 0 ? 'latest-price-change-color-green' : 'latest-price-change-color-red'}>{`${props.latestPrice.change > 0 ? '+' : '-'}$${String(Math.round(props.latestPrice.change * 100) / 100).substring(1)}`}</h2>\n            </div>\n        )\n    } else {\n        return (\n            <div className={'latest-price-wrapper'}>\n                <h1>-</h1>\n                <h1>-</h1>\n            </div>\n        )\n    }\n}\n\nexport default LatestPrice;","import React, {useEffect} from 'react';\nimport ReactEchartsCore from 'echarts-for-react';\nimport echarts from 'echarts/lib/echarts';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/chart/candlestick'\nimport { connect } from 'react-redux';\nimport { getChartData, getLatestPrice, updateChartState } from './redux/actions';\nimport { getOption, tryFetchingChartAgain, getLoadingOption, changeInterval } from './methods';\nimport Button from 'antd/lib/button';\nimport LatestPrice from \"./LatestPrice\";\n\necharts.registerTheme('my_theme', {\n    backgroundColor: '#f4cccc'\n});\n\nfunction Chart(props) {\n    useEffect(() => {\n        props.getChartData(props.ticker, '5min', true, props.tickerData);\n        props.getLatestPrice(props.ticker);\n\n        const interval = setInterval(() => {\n            props.getLatestPrice(props.ticker);\n        }, 20000);\n\n        return () => {\n            clearInterval(interval);\n        };\n    }, [props.ticker]);\n\n    return (\n        <div>\n            <h1 className='ticker'>{ props.ticker.toUpperCase() }</h1>\n            <LatestPrice {...props} />\n            <div style={{ height: '50vh' }} className='chart-wrapper'>\n                <ReactEchartsCore\n                    echarts={echarts}\n                    option={getOption(props)}\n                    notMerge={true}\n                    lazyUpdate={true}\n                    theme='my_theme'\n                    style={{ minHeight: '100%' }}\n                    loadingOption={getLoadingOption()}\n                    showLoading={props.loadingChartData}/>\n                    { props.chartDataExceeded\n                        ?   <div className='chart-container'>\n                                <div className='chart-overlay'>\n                                    <h1>Couldn't render chart. Only 5 API calls a minute max.</h1>\n                                    <Button className='try-fetching-chart-btn' type='primary' onClick={() => tryFetchingChartAgain(props)}>Try Again</Button>\n                                </div>\n                            </div>\n                        : null\n                    }\n            </div>\n            <div className='interval-wrapper'>\n                <a className={props.interval === '5min' ? 'interval-chosen' : ''}  onClick={() => changeInterval(props, '5min')}>5min</a>\n                <a className={props.interval === '1W' ? 'interval-chosen' : ''} onClick={() => changeInterval(props, '1W')}>1W</a>\n                <a className={props.interval === '1M' ? 'interval-chosen' : ''} onClick={() => changeInterval(props, '1M')}>1M</a>\n                <a className={props.interval === '1Y' ? 'interval-chosen' : ''} onClick={() => changeInterval(props, '1Y')}>1Y</a>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        tickerData: state.chart.get('tickerData').toJS(),\n        latestPrice: state.chart.get('latestPrice').toJS(),\n        loadingChartData: state.chart.get('loadingChartData'),\n        latestPriceExceeded: state.chart.get('latestPriceExceeded'),\n        chartDataExceeded: state.chart.get('chartDataExceeded'),\n        dates: state.chart.get('dates').toJS(),\n        interval: state.chart.get('interval')\n    }\n};\n\nexport default connect(mapStateToProps, { getChartData, getLatestPrice, updateChartState })(Chart);","import React from 'react';\nimport Chart from \"../../components/Chart\";\n\nfunction Home() {\n    return (\n        <div>\n            <Chart ticker='AAPL' />\n        </div>\n    )\n}\n\nexport default Home;","import { IntlProvider } from 'react-intl';\nimport translations from '../i18n/translations/index';\n\nconst locale = 'en-us';\nconst intlProvider = new IntlProvider({ locale, messages: translations[locale], defaultLocale: 'en-us', onError: (err) =>  console.error(err) });\nexport const formatMessage = intlProvider.state.intl.formatMessage;","import types from './types';\n\nexport const updateSearchState = (key, value) => ({\n    type: types.UPDATE_SEARCH_INTERNAL_STATE,\n    data: { key, value }\n});\n\nexport const searchStock = term => ({\n    type: types.WATCH_SEARCH_TICKER_DATA,\n    term\n});","import React from 'react';\nimport Autocomplete from 'antd/lib/auto-complete';\nimport Input from 'antd/lib/input';\nimport Icon from 'antd/lib/icon';\nimport { formatMessage } from '../../utils/formatMessage';\nimport { updateSearchState, searchStock } from './redux/actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nconst { Option } = Autocomplete;\n\nfunction Search(props) {\n    const options = props.searchResults\n        .map(result => (\n            <Option key={result['1. symbol']} value={result['1. symbol']}>\n                <span>{result['1. symbol']}</span>\n                <span className=\"stock-search-name\">{result['2. name']}</span>\n            </Option>\n\n        ));\n\n    function handleSearch(term) {\n        props.searchStock(term);\n    }\n\n    function handleSelect(selection) {\n        props.history.push(`/stocks/${selection}`);\n    }\n\n    return (\n        <div className='stock-search-container'>\n            <Autocomplete\n                className='stock-search'\n                dropdownClassName='stock-search-dropdown'\n                dropdownMatchSelectWidth={false}\n                onSearch={handleSearch}\n                onSelect={handleSelect}\n                size='large'\n                style={{ width: '100%' }}\n                dataSource={options}\n                placeholder={formatMessage({ id: 'app.search-for-a-stock' })}\n                optionLabelProp='value'>\n                    <Input placeholder='Search For A Stock eg. Microsoft' suffix={<Icon style={{ color: '#35C59B' }} type='search' className='stock-search-icon' />} />\n            </Autocomplete>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchTerm: state.search.get('searchTerm'),\n        searchResults: state.search.get('searchResults').toJS()\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, { updateSearchState, searchStock })(Search));","import React  from 'react';\nimport Chart from '../../components/Chart';\nimport { withRouter } from 'react-router-dom';\nimport _ from 'lodash';\n\nfunction StockShow(props) {\n    console.log(_.get(props, 'match.params.stock'));\n\n    return (\n        <div>\n            <Chart ticker={_.get(props, 'match.params.stock')} />\n        </div>\n    )\n}\n\nexport default withRouter(StockShow);","export const UriHelper = (method) => {\n   return `https://www.alphavantage.co/query?function=${method}&apikey=RXG32M4MQSBNDZKB`;\n};","import { takeLatest, put, call , debounce } from 'redux-saga/effects';\nimport { updateSearchState } from '../actions';\nimport { UriHelper } from '../../../../utils/UriHelper';\nimport _ from 'lodash';\nimport types from '../types';\nimport axios from 'axios';\n\nfunction* callSearchStockTickerAPI(term) {\n    const options = {\n        url: `${UriHelper('SYMBOL_SEARCH')}&keywords=${term}`,\n        method: 'get'\n    };\n\n    try {\n        const response = yield axios.request(options);\n        return _.get(response, 'data.bestMatches');\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction* setSearchStockTicker({ term }) {\n    yield put(updateSearchState('searchTerm', term));\n    const matches = yield call(callSearchStockTickerAPI, term);\n    if (!matches) return;\n\n    if (matches.length > 0) {\n        yield put(updateSearchState('searchResults', matches));\n    }\n}\n\nfunction* watchSearchStockTicker() {\n    yield debounce(500, types.WATCH_SEARCH_TICKER_DATA, setSearchStockTicker);\n}\n\nexport default watchSearchStockTicker;","import { takeLatest, call, put } from 'redux-saga/effects';\nimport { UriHelper } from'../../../../utils/UriHelper';\nimport { updateChartState } from '../actions';\nimport axios from 'axios';\nimport types from '../types';\nimport _ from 'lodash';\n\nfunction* callGetChartDataAPI(ticker, interval, apiOptions) {\n    const options = {\n        url: `${UriHelper(apiOptions.method)}&symbol=${ticker}`,\n        method: 'get'\n    };\n\n    if (apiOptions.interval) {\n        options.url += `&interval=${apiOptions.interval}`\n    }\n\n    if (apiOptions.outputSizeFull) {\n        options.url += `&outputsize=full`;\n    }\n\n    try {\n        const response = yield axios.request(options);\n\n        if (_.get(response, 'data.Note')) {\n            return 'exceeded';\n        } else {\n            return _.get(response, `data.${apiOptions.target}`);\n        }\n    } catch (e) {\n        return {};\n    }\n}\n\nfunction* setGetChartData({ data }) {\n    yield put(updateChartState('loadingChartData', true));\n    yield put(updateChartState('chartDataExceeded', false));\n\n    const { ticker, interval } = data;\n\n    let apiOptions = { method: 'TIME_SERIES_INTRADAY', interval: '5min', outputSizeFull: false, size: false, target: 'Time Series (5min)' };\n\n    switch (interval) {\n        case '5min': break;\n        case '1W': {\n            apiOptions = { method: 'TIME_SERIES_INTRADAY', interval: '60min', outputSizeFull: true, size: 49, target: 'Time Series (60min)' };\n            break;\n        }\n        case '1M': {\n            apiOptions = { method: 'TIME_SERIES_DAILY', interval: false, outputSizeFull: true, size: 22, target: 'Time Series (Daily)' };\n            break;\n        }\n        case '1Y': {\n            apiOptions = { method: 'TIME_SERIES_DAILY', interval: false, outputSizeFull: true, size: 253, target: 'Time Series (Daily)' };\n            break;\n        }\n        default: break;\n    }\n\n    const chartData = yield call(callGetChartDataAPI, ticker, interval, apiOptions);\n\n    if (chartData === 'exceeded') {\n        yield put(updateChartState('chartDataExceeded', true));\n        return;\n    } else {\n        yield put(updateChartState('chartDataExceeded', false));\n    }\n\n    let allChartData = {\n        chartData: [],\n        dates: []\n    };\n\n    for (let chartDataKey in chartData) {\n        let chartObj = chartData[chartDataKey];\n\n        allChartData.dates.push(chartDataKey);\n\n        allChartData.chartData.push(\n            [chartObj['1. open'],\n            chartObj['4. close'],\n            chartObj['3. low'],\n            chartObj['2. high']],\n        );\n    }\n\n    allChartData.dates = allChartData.dates.reverse();\n    allChartData.chartData = allChartData.chartData.reverse();\n\n    if (apiOptions.size) {\n        allChartData.chartData = allChartData.chartData.slice(allChartData.chartData.length - apiOptions.size);\n        allChartData.dates = allChartData.dates.slice(allChartData.dates.length - apiOptions.size);\n    }\n\n    yield put(updateChartState('loadingChartData', false));\n    yield put(updateChartState('dates', allChartData.dates));\n    return yield put(updateChartState('tickerData', allChartData));\n}\n\nfunction* watchGetChartData() {\n    yield takeLatest(types.WATCH_GET_CHART_DATA, setGetChartData);\n}\n\nexport default watchGetChartData;","import { takeLatest, put, call } from 'redux-saga/effects';\nimport { UriHelper } from '../../../../utils/UriHelper';\nimport { updateChartState } from '../actions';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport types from '../types';\n\nfunction* callGetLatestPriceAPI(ticker) {\n    try {\n        const options = {\n            url: `${UriHelper('GLOBAL_QUOTE')}&symbol=${ticker}`,\n            method: 'get'\n        };\n\n        const response = yield axios.request(options);\n\n        if (_.get(response, 'data.Note')) {\n            return 'exceeded';\n        } else {\n            const quote = _.get(response, 'data.Global Quote');\n            if (quote) {\n                return {\n                    price: quote['05. price'],\n                    change: quote['05. price'] - quote['08. previous close']\n                };\n            }\n        }\n    } catch (e) {\n        return {};\n    }\n}\n\nfunction* setGetLatestPrice({ ticker }) {\n    yield put(updateChartState('loadingLatestPrice', true));\n    yield put(updateChartState('latestPriceExceeded', false));\n\n    const latestPrice = yield call(callGetLatestPriceAPI, ticker);\n    yield put(updateChartState('loadingLatestPrice', false));\n\n    if (latestPrice === 'exceeded') {\n        return yield put(updateChartState('latestPriceExceeded', true));\n    } else {\n        yield put(updateChartState('latestPriceExceeded', false));\n    }\n\n    if (latestPrice) {\n        return yield put(updateChartState('latestPrice', latestPrice));\n    }\n}\n\nfunction* watchGetLatestPrice() {\n    yield takeLatest(types.WATCH_GET_LATEST_PRICE, setGetLatestPrice);\n}\n\nexport default watchGetLatestPrice;","import { spawn, all } from 'redux-saga/effects';\nimport SearchSaga from '../components/Search/redux/sagas/search';\nimport GetChartData from '../components/Chart/redux/sagas/getChartData';\nimport GetLatestPrice from '../components/Chart/redux/sagas/getLatestPrice';\n\nfunction* RootSaga() {\n    yield all([\n        spawn(SearchSaga),\n        spawn(GetChartData),\n        spawn(GetLatestPrice),\n    ]);\n}\n\nexport default RootSaga;","import React from 'react';\nimport RootReducer from './store/RootReducer';\nimport I18nProvider from './i18n/i18n';\nimport Home from './pages/Home';\nimport Search from './components/Search';\nimport StockShow from './pages/StockShow';\nimport createSagaMiddleware from 'redux-saga';\nimport RootSaga from './store/RootSaga';\nimport { applyMiddleware, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(RootReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(RootSaga);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n        <I18nProvider>\n            <Router>\n                <Switch>\n                    <div className='main-wrapper'>\n                        <Search />\n                        <Route exact path='/' component={Home} />\n                        <Route exact path='/stocks/:stock' component={StockShow} />\n                    </div>\n                </Switch>\n            </Router>\n        </I18nProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport './components/Search/search.css';\nimport './components/Chart/chart.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}